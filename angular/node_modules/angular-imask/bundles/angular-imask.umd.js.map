{"version":3,"file":"angular-imask.umd.js","sources":["ng://angular-imask/imask.directive.ts","ng://angular-imask/imask.pipe.ts","ng://angular-imask/imask.module.ts"],"sourcesContent":["import {\r\n  Directive, ElementRef, Input, Output, forwardRef, Provider, Renderer2,\r\n  EventEmitter, OnDestroy, OnChanges, AfterViewInit,\r\n  Optional, Inject, SimpleChanges,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\nimport { ÉµgetDOM as getDOM } from '@angular/platform-browser';\r\n// TODO import only types when ts 3.8 released or when move IMask to ts\r\nimport IMask from 'imask';\r\n\r\n\r\nfunction _isAndroid(): boolean {\r\n  const userAgent = getDOM() ? getDOM().getUserAgent() : '';\r\n  return /android (\\d+)/.test(userAgent.toLowerCase());\r\n}\r\n\r\n\r\nexport const MASKEDINPUT_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => IMaskDirective),\r\n  multi: true\r\n};\r\n\r\nconst DEFAULT_IMASK_ELEMENT = (elementRef: any) => elementRef.nativeElement;\r\n@Directive({\r\n  selector: '[imask]',\r\n  host: {\r\n    '(input)': '_handleInput($event.target.value)',\r\n    '(blur)': 'onTouched()',\r\n    '(compositionstart)': '_compositionStart()',\r\n    '(compositionend)': '_compositionEnd($event.target.value)'\r\n  },\r\n  providers: [MASKEDINPUT_VALUE_ACCESSOR]\r\n})\r\nexport class IMaskDirective<Opts extends IMask.AnyMaskedOptions> implements ControlValueAccessor, AfterViewInit, OnDestroy, OnChanges {\r\n  maskRef?: IMask.InputMask<Opts>;\r\n  onTouched: any;\r\n  onChange: any;\r\n  private _viewInitialized: boolean;\r\n  private _composing: boolean;\r\n  private _writingValue: any;\r\n  private _writing: boolean;\r\n\r\n  @Input() imask?: Opts;\r\n  @Input() unmask?: boolean|'typed';\r\n  @Input() imaskElement: (elementRef: ElementRef, directiveRef: any) => IMask.MaskElement;\r\n  @Output() accept: EventEmitter<any>;\r\n  @Output() complete: EventEmitter<any>;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _renderer: Renderer2,\r\n              @Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean) {\r\n    // init here to support AOT (TODO may be will work with ng-packgr - need to check)\r\n    this.onTouched = () => {};\r\n    this.onChange = () => {};\r\n    this.imaskElement = DEFAULT_IMASK_ELEMENT;\r\n    this.accept = new EventEmitter();\r\n    this.complete = new EventEmitter();\r\n    this._viewInitialized = false;\r\n    this._composing = false;\r\n    this._writing = false;\r\n\r\n    if (this._compositionMode == null) {\r\n      this._compositionMode = !_isAndroid();\r\n    }\r\n  }\r\n\r\n  get element () {\r\n    return this.imaskElement(this._elementRef, this);\r\n  }\r\n\r\n  get maskValue (): any {\r\n    if (!this.maskRef) return this.element.value;\r\n\r\n    if (this.unmask === 'typed') return this.maskRef.typedValue;\r\n    if (this.unmask) return this.maskRef.unmaskedValue;\r\n    return this.maskRef.value;\r\n  }\r\n\r\n  set maskValue (value: any) {\r\n    if (this.maskRef) {\r\n      if (this.unmask === 'typed') this.maskRef.typedValue = value;\r\n      else if (this.unmask) this.maskRef.unmaskedValue = value;\r\n      else this.maskRef.value = value;\r\n    } else {\r\n      this._renderer.setProperty(this.element, 'value', value);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.imask) this.initMask();\r\n\r\n    this._viewInitialized = true;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.elementRef && !this.imaskElement) this.imaskElement = DEFAULT_IMASK_ELEMENT;\r\n\r\n    if (!changes.imask || !this._viewInitialized) return;\r\n\r\n    if (this.imask) {\r\n      if (this.maskRef) this.maskRef.updateOptions(this.imask);\r\n      else {\r\n        this.initMask();\r\n        this.onChange(this.maskValue);\r\n      }\r\n    } else {\r\n      this.destroyMask();\r\n    }\r\n  }\r\n\r\n  destroyMask () {\r\n    if (this.maskRef) {\r\n      this.maskRef.destroy();\r\n      delete this.maskRef;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy () {\r\n    this.destroyMask();\r\n    this.accept.complete();\r\n    this.complete.complete();\r\n  }\r\n\r\n  beginWrite (value: any): void {\r\n    this._writing = true;\r\n    this._writingValue = value;\r\n  }\r\n\r\n  endWrite (): any {\r\n    this._writing = false;\r\n    return this._writingValue;\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    value = value == null ? '' : value;\r\n\r\n    if (this.maskRef) {\r\n      this.beginWrite(value);\r\n\r\n      if (this.maskValue !== value ||\r\n        // handle cases like Number('') === 0,\r\n        // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\r\n        (typeof value !== 'string' && this.maskRef.value === '') &&\r\n          !this.maskRef.el.isActive\r\n      ) {\r\n        this.maskValue = value;\r\n      }\r\n    } else {\r\n      this._renderer.setProperty(this.element, 'value', value);\r\n    }\r\n  }\r\n\r\n  _onAccept () {\r\n    const value = this.maskValue;\r\n    // if value was not changed during writing don't fire events\r\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/136\r\n    if (this._writing && value === this.endWrite()) return;\r\n    this.onChange(value);\r\n    this.accept.emit(value);\r\n  }\r\n\r\n  _onComplete () {\r\n    this.complete.emit(this.maskValue);\r\n  }\r\n\r\n  private initMask () {\r\n    this.maskRef = IMask(this.element, this.imask as Opts)\r\n      .on('accept', this._onAccept.bind(this))\r\n      .on('complete', this._onComplete.bind(this));\r\n  }\r\n\r\n  setDisabledState (isDisabled: boolean) {\r\n    this._renderer.setProperty(this.element, 'disabled', isDisabled)\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn }\r\n  registerOnTouched(fn: () => void): void { this.onTouched = fn }\r\n\r\n  _handleInput(value: any): void {\r\n    // if mask is attached all input goes throw mask\r\n    if (this.maskRef) return;\r\n\r\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\r\n      this.onChange(value);\r\n    }\r\n  }\r\n\r\n  _compositionStart(): void { this._composing = true; }\r\n\r\n  _compositionEnd(value: any): void {\r\n    this._composing = false;\r\n    this._compositionMode && this._handleInput(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { pipe } from 'imask';\r\nexport { PIPE_TYPE, pipe } from 'imask';\r\n\r\n\r\n/*\r\n * Transforms value through mask\r\n * Takes mask and optionally `from` and `to` pipe types.\r\n * Usage:\r\n *   value | imask:MASK_OR_MASKED:opt_from:opt_to\r\n * Example:\r\n *   {{ 2 | imask:mask }}\r\n*/\r\n@Pipe({name: 'imask'})\r\nexport class IMaskPipe implements PipeTransform {\r\n  transform (...args: Parameters<typeof pipe>): ReturnType<typeof pipe> {\r\n    return pipe(...args);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IMaskDirective } from './imask.directive';\r\nimport { IMaskPipe } from './imask.pipe';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [IMaskDirective, IMaskPipe],\r\n  exports: [IMaskDirective, IMaskPipe]\r\n})\r\nexport class IMaskModule {}\r\n"],"names":["getDOM","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","IMask","Directive","ElementRef","Renderer2","Optional","Inject","COMPOSITION_BUFFER_MODE","Input","Output","pipe","Pipe","NgModule","CommonModule"],"mappings":"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"}